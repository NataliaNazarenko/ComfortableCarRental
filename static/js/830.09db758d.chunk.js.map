{"version":3,"file":"static/js/830.09db758d.chunk.js","mappings":"+PAIaA,EAAYC,EAAAA,EAAAA,IAAH,iYAsBTC,EAAOD,EAAAA,EAAAA,EAAH,oLAWJE,EAAQF,EAAAA,EAAAA,GAAH,oLAWLG,GAAUH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,kgB,UCxCPK,EAAU,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC/B,OACE,+BACI,UAACR,EAAD,WACEO,IAAS,SAACJ,EAAD,UAAQI,IACjBC,IAAW,SAACN,EAAD,UAAOM,KACnB,SAACJ,EAAD,CAASK,GAAG,WAAZ,SAAuB,6BAO/B,E,UCbc,SAASC,IAEtB,IAAMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,KACV,GAAE,CAACH,IAEJ,IAKII,EALEC,GAAOC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,KAAKG,KAAf,IACxBC,GAAYH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,KAAKI,SAAf,IAC7BC,GAAYJ,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMG,UAAUF,KAApB,IAMnC,OAFAJ,EAAaC,EAAKM,QAAO,SAAAC,GAAG,OAAIF,EAAUG,SAASD,EAAIE,GAA3B,KAG1B,gCACGL,IAAa,SAACM,EAAA,EAAD,IACS,IAAtBX,EAAWY,SAAgB,SAACC,EAAA,EAAD,CAAUZ,KAAMD,IAErB,IAAtBA,EAAWY,SAAiBP,IAAa,SAACd,EAAD,CAASC,MAAM,mBAAmBC,QAAQ,wDAGzF,C","sources":["components/Message/Message.styled.jsx","components/Message/Message.jsx","pages/Favorites/Favorites.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  max-width: 375px;\n  padding: 20px 50px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    padding: 20px 95px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 1440px;\n    padding: 20px 128px;\n  }\n`;\n\nexport const Text = styled.p`\n  color: #3470ff;\n  font-family: Manrope;\n  font-size: 25px;\n  font-weight: bold;\n  font-style: normal;\n  line-height: 24px;\n\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  color: #3470ff;\n  font-family: Manrope;\n  font-size: 25px;\n  font-weight: bold;\n  font-style: normal;\n  line-height: 24px;\n\n  text-align: center;\n`;\n\nexport const Catalog = styled(Link)`\n  display: flex;\n\n  padding: 12px 12px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n\n  border-radius: 12px;\n  background-color: #3470ff;\n\n  color: #ffffff;\n  font-family: Manrope;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.42857;\n\n  text-decoration: none;\n\n  transition: background-color 250ms linear, transform 250ms linear;\n\n  &:hover {\n    background-color: #0b44cd;\n    transform: scale(1.05);\n  }\n`;\n","import React from 'react';\nimport {\n    Container,\n    Text,\n    Catalog,\n    Title\n} from './Message.styled';\n\nexport const Message = ({ title, content }) => {\n  return (\n    <>\n        <Container>\n         {title && <Title>{title}</Title>}\n         {content && <Text>{content}</Text>}\n         <Catalog to=\"/catalog\">\n          Choose favorite cars\n        </Catalog>\n        </Container>\n      \n    </>\n  );\n};","import React, { useEffect } from 'react';\nimport { CarsList } from 'components/CarsList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCars } from 'redux/cars/operations';\nimport { Message } from 'components/Message';\n\nimport { Loader } from 'components/Loader';\n\nexport default function Favorites() {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCars());\n  }, [dispatch]);\n\n  const cars = useSelector(state => state.cars.items);\n  const isLoading = useSelector(state => state.cars.isLoading);\n  const favorites = useSelector(state => state.favorites.items);\n\n  \n  let filterCars = [];\n  filterCars = cars.filter(car => favorites.includes(car.id));\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {filterCars.length !== 0 && <CarsList cars={filterCars} />}\n\n      {filterCars.length === 0 && !isLoading && <Message title=\"No favorite cars\" content=\"You haven't added any cars to your favorites yet.\" />}\n    </>\n  );\n};"],"names":["Container","styled","Text","Title","Catalog","Link","Message","title","content","to","Favorites","dispatch","useDispatch","useEffect","fetchCars","filterCars","cars","useSelector","state","items","isLoading","favorites","filter","car","includes","id","Loader","length","CarsList"],"sourceRoot":""}